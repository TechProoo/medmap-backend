{
  "openapi": "3.0.0",
  "info": {
    "title": "MedMap API",
    "version": "1.0.0",
    "description": "API documentation for MedMap - Find real-time drug availability at nearby pharmacies"
  },
  "servers": [
    {
      "url": "http://localhost:3100"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "firstname": { "type": "string" },
          "lastname": { "type": "string" },
          "email": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "SignupDto": {
        "type": "object",
        "required": ["firstname", "lastname", "email", "password"],
        "properties": {
          "firstname": { "type": "string", "description": "User's first name" },
          "lastname": { "type": "string", "description": "User's last name" },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "User's password (minimum 6 characters)"
          }
        }
      },
      "LoginDto": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "User's password"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/User" },
          "token": {
            "type": "string",
            "description": "JWT authentication token"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "status": { "type": "string" },
          "errors": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "PharmacySignupDto": {
        "type": "object",
        "required": ["name", "email", "password", "phone", "contactInfo"],
        "properties": {
          "name": { "type": "string", "description": "Pharmacy business name" },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Pharmacy email address"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "Password for pharmacy account"
          },
          "description": {
            "type": "string",
            "description": "What does pharmacy specialize in"
          },
          "contactInfo": {
            "type": "object",
            "required": [
              "address",
              "state",
              "country",
              "longitude",
              "latitude",
              "phone"
            ],
            "properties": {
              "address": {
                "type": "string",
                "description": "Physical address of the pharmacy"
              },
              "state": {
                "type": "string",
                "description": "State where pharmacy is located"
              },
              "country": {
                "type": "string",
                "description": "Country where pharmacy is located"
              },
              "longitude": {
                "type": "number",
                "description": "Pharmacy location longitude"
              },
              "latitude": {
                "type": "number",
                "description": "Pharmacy location latitude"
              },
              "phone": {
                "type": "string",
                "description": "Contactable phone number"
              }
            }
          }
        }
      },
      "PharmacyUpdateDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Pharmacy business name" },
          "description": {
            "type": "string",
            "description": "What does pharmacy specialize in"
          },
          "address": {
            "type": "string",
            "description": "Physical address of the pharmacy"
          },
          "state": {
            "type": "string",
            "description": "State where pharmacy is located"
          },
          "country": {
            "type": "string",
            "description": "Country where pharmacy is located"
          },
          "longitude": {
            "type": "number",
            "description": "Pharmacy location longitude"
          },
          "latitude": {
            "type": "number",
            "description": "Pharmacy location latitude"
          },
          "logo": {
            "type": "string",
            "format": "binary",
            "description": "Pharmacy logo image file"
          },
          "shopImage": {
            "type": "string",
            "format": "binary",
            "description": "Pharmacy shop front image file"
          }
        }
      },
      "ContactInfo": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "address": { "type": "string" },
          "phone": { "type": "string" },
          "state": { "type": "string" },
          "country": { "type": "string" },
          "longitude": { "type": "number" },
          "latitude": { "type": "number" },
          "pharmacyId": { "type": "string" }
        }
      },
      "Pharmacy": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "description": { "type": "string", "nullable": true },
          "logoUrl": { "type": "string", "format": "url", "nullable": true },
          "shopImageUrl": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "contactInfo": { "$ref": "#/components/schemas/ContactInfo" }
        }
      },
      "CreateDrugDto": {
        "type": "object",
        "required": [
          "name",
          "sideEffects",
          "expiryDate",
          "price",
          "illnessIds"
        ],
        "properties": {
          "name": { "type": "string", "description": "Name of the drug" },
          "description": {
            "type": "string",
            "description": "Description of the drug"
          },
          "sideEffects": {
            "type": "array",
            "items": { "type": "string" },
            "description": "List of side effects"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "description": "Expiry date of the drug"
          },
          "price": {
            "type": "number",
            "minimum": 0,
            "description": "Price of the drug"
          },
          "stocks": {
            "type": "integer",
            "minimum": 0,
            "default": 1,
            "description": "Number of units in stock"
          },
          "illnessIds": {
            "type": "array",
            "items": { "type": "string" },
            "description": "List of illness IDs this drug treats"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Drug image file"
          }
        }
      },
      "DrugResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/Drug" }
        }
      },
      "PaginatedDrugResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "data": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Drug" }
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "total": { "type": "integer" },
                  "page": { "type": "integer" },
                  "limit": { "type": "integer" },
                  "totalPages": { "type": "integer" }
                }
              }
            }
          }
        }
      },
      "Drug": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sideEffects": {
            "type": "array",
            "items": { "type": "string" }
          },
          "pharmacyId": { "type": "string" },
          "expiryDate": { "type": "string", "format": "date-time" },
          "imageUrl": { "type": "string" },
          "price": { "type": "number" },
          "stocks": {
            "type": "integer",
            "description": "Number of units in stock"
          },
          "pharmacy": { "$ref": "#/components/schemas/Pharmacy" },
          "illnessDrugs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "illness": { "$ref": "#/components/schemas/Illness" }
              }
            }
          }
        }
      },
      "CreateIllnessDto": {
        "type": "object",
        "required": ["name", "symptoms", "precautions"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the illness"
          },
          "description": {
            "type": "string",
            "description": "Description of the illness"
          },
          "symptoms": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Array of symptom groups"
          },
          "precautions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of precautions for the illness"
          }
        }
      },
      "IllnessResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "symptoms": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "precautions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "illnessDrugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DrugResponse"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "description": "Authenticate user and get token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "tags": ["User"],
        "summary": "Get user profile",
        "description": "Get the profile of the currently authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/pharmacy/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new pharmacy",
        "description": "Create a new pharmacy account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PharmacySignupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pharmacy registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/pharmacy/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login pharmacy",
        "description": "Authenticate pharmacy and get token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "pharmacy": {
                          "$ref": "#/components/schemas/Pharmacy"
                        },
                        "token": {
                          "type": "string",
                          "description": "JWT authentication token"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pharmacy/{id}": {
      "patch": {
        "tags": ["Pharmacy"],
        "summary": "Update pharmacy details",
        "description": "Update pharmacy information including optional logo and shop image",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Pharmacy ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PharmacyUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pharmacy updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pharmacy not found"
          }
        }
      },

      "get": {
        "tags": ["Pharmacy"],
        "summary": "Get pharmacy by ID",
        "description": "Retrieve details for a specific pharmacy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Pharmacy ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Pharmacy"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pharmacy not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/pharmacy/profile": {
      "get": {
        "tags": ["Pharmacy"],
        "summary": "Get pharmacy Profile",
        "description": "Retrieve details for a specific pharmacy",

        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Pharmacy"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pharmacy not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/pharmacy": {
      "get": {
        "tags": ["Pharmacy"],
        "summary": "Get all pharmacies",
        "description": "Retrieve a list of all registered pharmacies",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pharmacy"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/drugs": {
      "get": {
        "tags": ["Drugs"],
        "summary": "Get all drugs",
        "description": "Retrieve all drugs with optional filters",
        "parameters": [
          {
            "in": "query",
            "name": "illnessId",
            "schema": {
              "type": "string"
            },
            "description": "Filter drugs by illness ID"
          },
          {
            "in": "query",
            "name": "minStocks",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Filter drugs by minimum stock level"
          },
          {
            "in": "query",
            "name": "maxStocks",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Filter drugs by maximum stock level"
          },
          {
            "in": "query",
            "name": "minPrice",
            "schema": {
              "type": "number"
            },
            "description": "Filter drugs by minimum price"
          },
          {
            "in": "query",
            "name": "maxPrice",
            "schema": {
              "type": "number"
            },
            "description": "Filter drugs by maximum price"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrugResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Drugs"],
        "summary": "Create a new drug",
        "description": "Add a new drug to pharmacy inventory",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateDrugDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Drug created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrugResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/drugs/search": {
      "get": {
        "tags": ["Drugs"],
        "summary": "Search drugs with pagination",
        "description": "Search for drugs with various filters and pagination",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Search by drug name"
          },
          {
            "in": "query",
            "name": "illnessId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by illness ID"
          },
          {
            "in": "query",
            "name": "minStocks",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Filter by minimum stock level"
          },
          {
            "in": "query",
            "name": "maxStocks",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Filter by maximum stock level"
          },
          {
            "in": "query",
            "name": "minPrice",
            "schema": {
              "type": "number"
            },
            "description": "Minimum price"
          },
          {
            "in": "query",
            "name": "maxPrice",
            "schema": {
              "type": "number"
            },
            "description": "Maximum price"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDrugResponse"
                }
              }
            }
          }
        }
      }
    },
    "/drugs/{id}": {
      "get": {
        "tags": ["Drugs"],
        "summary": "Get drug by ID",
        "description": "Retrieve details for a specific drug",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Drug ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrugResponse"
                }
              }
            }
          },
          "404": {
            "description": "Drug not found"
          }
        },
        "patch": {
          "tags": ["Drugs"],
          "summary": "Update drug",
          "description": "Update drug details (pharmacy only)",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Drug ID"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDrugDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Drug updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DrugResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Drug not found"
            }
          }
        },
        "delete": {
          "tags": ["Drugs"],
          "summary": "Delete drug",
          "description": "Delete a drug (pharmacy only)",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Drug ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Drug deleted successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DrugResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Drug not found"
            }
          }
        }
      }
    },
    "/illnesses": {
      "post": {
        "tags": ["Illnesses"],
        "summary": "Create a new illness",
        "description": "Create a new illness with symptoms and precautions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIllnessDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Illness created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IllnessResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Illnesses"],
        "summary": "Get all illnesses",
        "description": "Retrieve a list of all illnesses",
        "responses": {
          "200": {
            "description": "List of illnesses retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IllnessResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/illnesses/{id}": {
      "get": {
        "tags": ["Illnesses"],
        "summary": "Get illness by ID",
        "description": "Retrieve an illness by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Illness retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IllnessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Illness not found"
          }
        }
      },
      "put": {
        "tags": ["Illnesses"],
        "summary": "Update illness",
        "description": "Update an existing illness by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIllnessDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Illness updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IllnessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Illness not found"
          }
        }
      },
      "delete": {
        "tags": ["Illnesses"],
        "summary": "Delete illness",
        "description": "Delete an illness by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Illness deleted successfully"
          },
          "404": {
            "description": "Illness not found"
          }
        }
      }
    },
    "/illnesses/{illnessId}/drugs/{drugId}": {
      "post": {
        "tags": ["Illnesses"],
        "summary": "Link drug to illness",
        "description": "Link an existing drug to an illness",
        "parameters": [
          {
            "name": "illnessId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drugId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Drug linked to illness successfully"
          },
          "404": {
            "description": "Illness or drug not found"
          }
        }
      },
      "delete": {
        "tags": ["Illnesses"],
        "summary": "Unlink drug from illness",
        "description": "Remove the link between a drug and an illness",
        "parameters": [
          {
            "name": "illnessId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drugId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Drug unlinked from illness successfully"
          },
          "404": {
            "description": "Illness or drug not found"
          }
        }
      }
    },
    "/illnesses/search": {
      "get": {
        "tags": ["Illnesses"],
        "summary": "Search illnesses with pagination",
        "description": "Search for illnesses by name with pagination support",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query to filter illnesses by name"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Illnesses retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Illness"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "hasMore": {
                              "type": "boolean"
                            },
                            "hasPrev": {
                              "type": "boolean"
                            },
                            "totalItems": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            },
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
